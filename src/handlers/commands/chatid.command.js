/**
 * Comando /chatid
 */
const BaseCommand = require('./base.command');
const ChatUtils = require('../../utils/chat');

class ChatIdCommand extends BaseCommand {
  /**
   * Obtiene el patr√≥n regex para el comando
   * @returns {RegExp} - Patr√≥n de regex para el comando
   */
  getPattern() {
    return /\/chatid/;
  }

  /**
   * Ejecuta el comando /chatid
   * @param {Object} bot - Instancia del bot de Telegram
   * @param {Object} msg - Mensaje de Telegram
   */
  async execute(bot, msg) {
    const chatId = msg.chat.id;
    const info = ChatUtils.getChatInfo(msg);
    const chatType = info.chat.type;

    // Construir respuesta con informaci√≥n detallada
    let response = 'üì¢ *Informaci√≥n del chat:*\n\n';
    response += `‚Ä¢ *ID del chat:* \`${chatId}\`\n`;
    response += `‚Ä¢ *Tipo de chat:* ${chatType}\n`;

    if (chatType === 'private') {
      response += `‚Ä¢ *Usuario:* ${info.from.firstName} ${info.from.lastName}\n`;
      if (info.from.username) {
        response += `‚Ä¢ *Username:* @${info.from.username}\n`;
      }
    } else {
      response += `‚Ä¢ *T√≠tulo del grupo:* ${info.chat.title}\n`;
      response += `‚Ä¢ *Enviado por:* ${info.from.firstName} ${info.from.lastName}\n`;
      if (info.from.username) {
        response += `‚Ä¢ *Username:* @${info.from.username}\n`;
      }
    }

    // Enviar mensaje con informaci√≥n
    await bot.sendMessage(chatId, response, { parse_mode: 'Markdown' });

    this.logger.info(`Informaci√≥n del chat enviada a ${chatId}`, 'ChatIdCommand');
  }
}

module.exports = ChatIdCommand;
